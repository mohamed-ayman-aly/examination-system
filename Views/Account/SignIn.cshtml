@model examination_system.Models.View_Models.SignInViewModel

@{
    ViewBag.Title = "Sign In";
}

<h2 class="text">Sign In</h2>


@using (Html.BeginForm("SignIn", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = " text lbel control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "input form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "text lbel control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "input form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "text lbel control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "input form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "text lbel control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "input form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "text lbel control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "input form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Image File", htmlAttributes: new { @class = "text lbel control-label col-md-2" })
            <div class="col-md-10">
                <input required style="display:none" onchange="browseResult(event)" id="ImgFile" type="file" name="ImgFile" value="" accept="image/*" />
                <button type="button" onclick="document.getElementById('ImgFile').click();" class="pnlbutton">
                    Upload Image
                </button>
                <span class="text" id="ImgFileName"></span>
                <br />
                <img id="ImgFileshow" />
            </div>
        </div>


        <div class="form-group ">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sign In" class="pnlbutton" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function browseResult(event) {
            document.getElementById("ImgFileName").innerText = event.target.files[0].name;
            document.getElementById("ImgFileshow").src = URL.createObjectURL(event.target.files[0]);
        }
    </script>
}
