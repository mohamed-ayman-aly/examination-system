@using examination_system.Models
@model Exam
@{
    int n = 1;
    if (Model != null)
    {
        ViewBag.Title = Model.Name;
    }
    else
    {
        ViewBag.Title = "Exam has ended";
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Studentanswer> Studentanswers = ViewBag.ansers;
    List<Answer> answers = new List<Answer>();
    foreach (var sa in Studentanswers)
    {
        answers.Add(sa.Answer);
    }
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
@functions{
    public string qtohtml(ExamQuestion eq, int n, List<Answer> answers)
    {
        string res = "";
        res += "<div class=\"pnl\" style=\"min-width: 98%;\">" +
                    "<div class='row'>" +
                        "<img style='width: 27px;margin: 5px;' src = '/Resources/minimize.svg' onclick ='minimize(event);' />" +
                    "</div>" +
                    "<h3>" + n + ") " + eq.Question.QuestionBody + "</h3>" +
                    "<h3 class=\"Degree\"> deg:" + eq.Degree + "</h3>" +
                    "<div id=\"" + eq.Id + "\" style=\"width:100%\"><form style=\"width: inherit;\">";
        foreach (var a in eq.Question.Answers.OrderBy(a => a.AnswerBody))
        {
            res += "<div style=\"display: flex;width: inherit;flex-direction: row;align-items: stretch;\">" +
                      "<input onchange=\"issaved('" + eq.Question.Id + "','" + a.Id + "')\" " + (answers.Contains(a) ? "checked" : "") + "  id=\"ans\" name=\"ans\" type=\"radio\" value=\"" + a.Id + "\" style=\"width: 4% !important;height: 4% !important;\">" +
                      "<span style=\"font-size: 24px;\">" + a.AnswerBody + "</span>" +
                  "</div>";
        }
        res += "</form></div>" +
   "</div>";
        return res;
    }
    public string groptohtml(GroupQuestion gq, int n, List<Answer> answers)
    { return ""; }
    public string suptohtml(SubQuestion sq, int n, List<Answer> answers)
    {
        string res = "";
        res += "<div id='" + sq.Id + "' class='sub'>" +
                    "<div class='row'>" +
                        "<img style='width: 27px;margin: 5px;' src = '/Resources/minimize.svg' onclick ='minimize(event);' />" +
                    "</div>" +
                    "<h3 class=\"Degree\"> deg:" + sq.Degree() + "</h3>" +
                    "<div class= 'row'>" +
                        "<h3> Heading</h3>" +
                    "</div>" +
                    "<div class= 'row' >" +
                        "<h3>" +sq.Heading +"</h3>" +
                    "</div>";
        foreach (ExamQuestion eq in sq.Questions)
        {
            res += qtohtml(eq, n, answers);
            n++;
        }
        foreach (GroupQuestion gq in sq.GroupQuestions)
        {
            res += groptohtml(gq, n, answers);
            n++;
        }
        foreach (SubQuestion ssq in sq.SubQuestions)
        {
            res += suptohtml(ssq, n, answers);
        }
        res += "</div>";
        return res;
    }
}
<div class="all">
    <div>
        @if (Model == null)
        {
            <div>
                Exam has ended
            </div>
        }
        else
        {
            <div class="row">
                <h2>Class: @Model.Class.Name</h2>
            </div>
            <div class="Degree">
                <h2>Degree: @Model.Degree()</h2>
            </div>
            <div class="time">
                @{
                    var t = Model.Date + TimeSpan.FromMinutes(Model.Duration) - DateTime.Now;
                }
                <h2 class="Days">@t.Days </h2><h2>D</h2>
                <h2 class="Hours">@t.Hours </h2><h2>H</h2>
                <h2 class="Minutes">@t.Minutes </h2><h2>M</h2>
                <h2 class="Seconds">@t.Seconds </h2><h2>S</h2>
            </div>
            <div class="Prof">
                <h2>Professor: @Model.Professor.UserName</h2>
            </div>
            <div class="row">
                <h2>Exam: @Model.Name</h2>
            </div>
            <div class="row">
                <button class="smallbutton" onclick="Submit()">
                    <img src="~/Resources/Exam/Submit.svg" />
                </button>
            </div>
            foreach (ExamQuestion q in Model.Questions)
            {
                @Html.Raw(@qtohtml(q, n, answers));
                n++;
            }
            foreach (GroupQuestion gq in Model.GroupQuestions)
            {
                @Html.Raw(@groptohtml(gq, n, answers));
                n++;
            }
            foreach (SubQuestion sq in Model.SubQuestions)
            {
                @Html.Raw(@suptohtml(sq, n, answers));
            }
        }
    </div>
</div>
<style>
    *,h3 {
        margin:0;
        padding:0;
    }
    .pnl {
        width: inherit;
        align-items: baseline !important;
        padding-left: 20px;
        padding-right: 70px;
        position: relative;
        text-align: left !important;
    }
    .sub {
        padding-left: 20px;
        display: flex;
        position: relative;
        background-color: #000000a0;
        color: #00c0ff !important;
        border-radius: 12px;
        margin: 10px;
        flex-direction: column;
        border: solid black 2px;
        min-width: 98%;
    }
    .sub.sub {
        margin: 10px;
        display: flex;
        flex-wrap: wrap;
    }
    .row {
        margin: 3px 10px;
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        flex-direction: row;
        width: 93%;
    }
    .Degree {
        position: absolute;
        top: 0;
        right: 0;
        margin: 4px;
        margin-right: 7px;
    }
    .all > div {
        overflow: hidden;
        width: 95% !important;
        min-height: 0 !important;
        justify-content: flex-start;
        position: relative;
        display: flex;
        flex-direction: column;
        flex-wrap: wrap;
        align-items: center;
    }
    .time {
        position: absolute;
        top: 60px;
        right: 0;
        margin: 4px;
        margin-right: 7px;
    }
    .time h2 {
        display:inline;
    }
    .Prof {
        position: absolute;
        top: 68px;
        right: 0;
        margin: 4px;
        margin-right: 7px;
    }
</style>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
<script>
    var form = $('#__AjaxAntiForgeryForm');
    var token = $('input[name="__RequestVerificationToken"]', form).val();
     function Submit() {
        if (confirm('Are you sure you want to Submit Exam'))
            $.ajax({
                url: '/ExamStudent/Submit?Id=' + '@(ViewBag.ExamStudentId)',
                type: 'POST',
                data: { __RequestVerificationToken: token, Id: '@(ViewBag.ExamStudentId)' },
                success: function (data) {
                    if (data == 'True') {
                        var a = document.createElement('a');
                        a.href = "/Home/Index";
                        a.click();
                    }
                }
            });
    }
    function issaved(q,ans) {
        $.ajax({
            type: "POST",
            url: "/ExamStudent/AddAnswer",
            data: {
                __RequestVerificationToken: token,
                e: '@ViewBag.ExamStudentId',
                q: q,
                ans: ans,
            },
            success: function(data) {
                if (data != "True") {
                    location.reload();
                }
            },
            error: function (data) {
                alert("some Error");
            }
        });
        }
    function minimize(event) {
        event.target.src = "/Resources/maximize.svg";
        event.target.setAttribute("onclick", "maximum(event);")
        var x = false;
        for (var child of event.target.parentElement.parentElement.children) {
            if (x)
                child.style.display = "none";
            x = true;
        }

    };
    function maximum(event) {
        event.target.src = "/Resources/minimize.svg";
        event.target.setAttribute("onclick", "minimize(event);")
        var x = false;
        for (var child of event.target.parentElement.parentElement.children) {
            if (x)
                child.style.removeProperty('display');
            x = true;
        }
    };
    var e = document.getElementsByClassName("time")[0];
    var Interval = setInterval(timerInterval, 1000);
    function timerInterval() {
        var Seconds = e.getElementsByClassName('Seconds')[0];
        if ((Number)(Seconds.innerText) > 0) {
            Seconds.innerText = (((Number)(Seconds.innerText)) - 1);
            return;
        }
        var Minutes = e.getElementsByClassName('Minutes')[0];
        if ((Number)(Minutes.innerText) > 0) {
            Minutes.innerText = (((Number)(Minutes.innerText)) - 1);
            Seconds.innerText = 59;
            return;
        }
        var Hours = e.getElementsByClassName('Hours')[0];
        if ((Number)(Hours.innerText) > 0) {
            Hours.innerText = (((Number)(Hours.innerText)) - 1);
            Minutes.innerText = 59;
            Seconds.innerText = 59;
            return;
        }
        var Days = e.getElementsByClassName('Days')[0];
        if ((Number)(Days.innerText) > 0) {
            Days.innerText = (((Number)(Days.innerText)) - 1);
            Hours.innerText = 23;
            Minutes.innerText = 59;
            Seconds.innerText = 59;
            return;
        }
    }
</script>
}
