@using examination_system.Models;
@model Exam
@{
    ViewBag.Title = "Add Exam";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
@functions{
    public string qtohtml(ExamQuestion eq)
    {
        string res = "";
        res += "<div id=\"" + eq.Question.Id + "\" class=\"pnl\" style=\"display: flex; justify-content: space-between; align-items: center;\" onclick=\"setmehere(event)\" >" +
                   "<div class= \"row\" onclick = \"setmehere(event)\" >" +
                      "<img class='minimg' src = '/Resources/minimize.svg' onclick ='setmehere(event);minimize(event);' />" +
                      "<img class='minimg' src = '/Resources/delete.svg' onclick ='setmehere(event);removeqtohere(event);' />" +
                   "</div>" +
                   "<div class='row' onclick=\"setmehere(event)\">" +
                       "<div class='row' onclick=\"setmehere(event)\">" + eq.Question.QuestionBody + "</div>" +
                       "<ul style='width: 100%;' onclick=\"setmehere(event)\">";
        foreach (var a in eq.Question.Answers)
        {
            res += "<li onclick=\"setmehere(event)\"><div onclick=\"setmehere(event)\">" + @a.AnswerBody + "</div></li>";
        }
        res += "</ul>" +
            "</div>" +
            "<div>" +
                "<span>Degree</span>" +
                "<input type=\"number\" onchange='setmehere(event);saveAddq2f(event);' onclick=\"lastd=event.target.value;setmehere(event)\" value=\"" + eq.Degree + "\" style=\"max-width: none;color:#00c0ff !important; width: 82% !important;\" />" +
            "</div>" +
        "</div>";
        return res;
    }
    public string groptohtml(GroupQuestion gq)
    {
        string res = "";
        res += "<div id='" + gq.Id + "' class='sub' onclick ='setmehere(event)' >" +
                    "<div class= \"row\" onclick = \"setmehere(event)\" >" +
                        "<img class='minimg' src = '/Resources/minimize.svg' onclick ='setmehere(event);minimize(event);' />" +
                        "<img class='minimg' src = '/Resources/delete.svg' onclick ='setmehere(event);removeGrop2here(event);' />" +
                    "</div>";
                    foreach (var eq in gq.Questions) {
                        res += qtohtml(eq);
                    }
                    res +="<div>" +
                            "<span>Degree</span>" +
                            "<input onchange=\"setmehere(event);saveAddgrop2f(event)\" type=\"number\" onclick=\"lastd=event.target.value;setmehere(event)\" value=\"" + gq.Degree + "\" style=\"max-width: none;color:#00c0ff !important; width: 82% !important;\" />" +
                          "</div>" +
               "</div>";
        return res;
    }
    public string suptohtml(SubQuestion sq)
    {
        string res = "";
        res += "<div id='" + sq.Id + "' class='sub' onclick ='setmehere(event)' >" +
                  "<div class= \"row\" onclick = \"setmehere(event)\" >" +
                      "<h3 class=\"Degree\"> deg:" + sq.Degree() + "</h3>" +
                      "<img class='minimg' src = '/Resources/minimize.svg' onclick ='setmehere(event);minimize(event);' />" +
                      "<img class='minimg' src = '/Resources/delete.svg' onclick ='setmehere(event);removesub2here(event);' />" +
                  "</div>" +
                  "<div class= 'row' onclick ='setmehere(event)'>" +
                      "<button class= 'smallbutton' onclick = 'setmehere(event);AddSub2f(event)' >" +
                          "<img src = '/Resources/Exam/AddSub2E.svg' onclick = 'setmehere(event)' />" +
                      "</button>" +
                      "<button class='smallbutton' onclick = 'setmehere(event);AddGrop2f(event);' >" +
                          "<img src = '/Resources/Exam/AddGrop2E.svg' onclick ='setmehere(event)' />" +
                      "</button>" +
                  "</div>" +
                  "<div class= 'row' onclick = 'setmehere(event)' >" +
                      "<span onclick = 'setmehere(event)' style = 'margin: 0 10px;width: 60px;' > Heading</ span>" +
                  "</div>" +
                  "<div class= 'row' onclick = 'setmehere(event)' >" +
                      "<textarea onchange='saveAddSub2f(event)' onclick = 'setmehere(event)'>" +
                      sq.Heading +
                      "</textarea>" +
                  "</div>";

        foreach (ExamQuestion eq in sq.Questions)
        {
            res += qtohtml(eq);
        }
        foreach (GroupQuestion gq in sq.GroupQuestions)
        {
            res += groptohtml(gq);
        }
        foreach (SubQuestion ssq in sq.SubQuestions)
        {
            res += suptohtml(ssq);
        }
        res += "</div>";
        return res;
    }
}
<div style="margin:0 70px">
    <h2>Edit Exam:@Model.Name</h2>
</div>
<button class="smallbutton" onclick="AddSub2E()" title="sub Questions">
    <img src="/Resources/Exam/AddSub2E.svg" />
</button>
<button class="smallbutton" onclick="AddGrop2E()" title="Group Questions">
    <img src="/Resources/Exam/AddGrop2E.svg" />
</button>
<button class="smallbutton" onclick="Submit()" title="submit">
    <img src="~/Resources/Exam/Submit.svg" />
</button>
<div id="body" class="body">
    <div id="examtop" class="move" unselectable="on" style="position: absolute;overflow-y:hidden;">exam</div>
    <div id="questiontop" class="move" unselectable="on" style="position: absolute; overflow-y: hidden;">questions</div>
    <div id="exambody" onclick="setmehere(event);" style="position: absolute;border: solid 2px white">
        @foreach (ExamQuestion eq in ViewBag.exambody)
        {
            @Html.Raw(@qtohtml(eq));
        }
        @foreach (GroupQuestion q in ViewBag.myexamGroupQuestions)
        {
            @Html.Raw(@groptohtml(q));
        }
        @foreach (SubQuestion q in ViewBag.myexamSubQuestions)
        {
            @Html.Raw(@suptohtml(q));
        }
    </div>
    <div id="questionbody" style="position: absolute;">
        @foreach (Question q in ViewBag.questionbody)
        {
            <div id="@q.Id" class="pnl" style="display: flex; justify-content: space-between; align-items: center;">
                <div class="row">
                    <img class='minimg' src='/Resources/minimize.svg' onclick='minimize(event);' />
                    <img class='minimg' src='~/Resources/Account/add.svg' onclick='addqtohere(event);' />
                </div>
                <div>
                    <div>
                        @q.QuestionBody
                    </div>
                    <ul>
                        @foreach (var a in q.Answers)
                        {
                            <li><div> @a.AnswerBody </div></li>
                        }
                    </ul>
                </div>
            </div>
        }
    </div>
</div>
<style>
    * {
        margin: 0;
        padding: 0;
    }
    .minimg {
        width: 27px;
        margin: 10px;
    }
    .sub {
        display: flex;
        background-color: #000000a0;
        position: relative;
        color: #00c0ff !important;
        border-radius: 12px;
        margin: 10px;
        flex-direction: column;
        border: solid black 2px;
        min-height: 30px;
    }
    .sub .sub {
        margin: 10px;
        display: flex;
        flex-wrap: wrap;
        background-color: #00000000;
    }
    #body {
        position: relative;
        width: 100%;
        height: 80vh;
        background-color: #ffffff33;
        overflow: hidden;
    }
    #examtop {
        color: aliceblue;
        background-color: #007fa8;
        padding: 5px;
        padding-bottom: 40px;
        margin-top: 0.75vh;
        margin-left: 0.75vw;
        height: 4.25vh;
        border-radius: 3vh 3vh 0 0;
        display: inline-block;
        text-align: center;
        line-height: 4.25vh;
        z-index: 1;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        -o-user-select: none;
        user-select: none;
    }
    #questiontop {
        color: aliceblue;
        background-color: #007fa8;
        margin-top: 0.75vh;
        margin-left: 5.5vw;
        height: 4.25vh;
        padding: 5px;
        padding-bottom: 40px;
        border-radius: 3vh 3vh 0 0;
        display: inline-block;
        text-align: center;
        line-height: 4.25vh;
        z-index: 1;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        -o-user-select: none;
        user-select: none;
    }
    #exambody {
        background-color: #007fa8;
        position: absolute;
        width: 100%;
        height: 75vh;
        overflow-y: auto;
        top: 5vh;
        z-index: 1;
        border-radius: 3vh;
    }
    #questionbody {
        background-color: #007fa8;
        position: absolute;
        width: 100%;
        height: 75vh;
        overflow-y: auto;
        top: 5vh;
        z-index: 1;
        border-radius: 3vh;
    }
    .row {
        margin: 10px;
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        flex-direction: row;
        width: 93%;
    }
    .Degree {
        position: absolute;
        top: 0;
        right: 0;
        margin: 4px;
        margin-right: 7px;
    }
    .row textarea {
        background-color: #00c0ff !important;
        color: #ffffff !important;
        max-width: none;
        border-radius: 34px !important;
        font-size: 2rem !important;
        line-height: 23px !important;
        margin: 10px !important;
        padding: 20px !important;
        border: 1px white solid !important;
        width: 95%;
        outline: none !important;
    }
</style>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
<script>
    var form = $('#__AjaxAntiForgeryForm');
    var token = $('input[name="__RequestVerificationToken"]', form).val();
    var examtop = document.getElementById("examtop");
    var questiontop = document.getElementById("questiontop");

    var exambody = document.getElementById("exambody");
    var questionbody = document.getElementById("questionbody");

    var body = document.getElementById("body");
    var bodyp = body.getBoundingClientRect();
    var here = exambody;
    here.style.border = "white solid 2px";
    var lastd = 0;
    function Submit() {
        if (confirm('Are you sure you want to Submit Exam'))
            $.ajax({
                url: '/Exam/Submit?Id=' + '@(Model.Id)',
                type: 'POST',
                data: { __RequestVerificationToken: token, Id: '@(Model.Id)' },
                success: function (data) {
                    if (data == 'True') {
                        var a = document.createElement('a');
                        a.href = "/Exam/Index";
                        a.click();
                    }
                }
            });
    }
    function setmehere(event) {
        var lasthere = here;
        here.style.removeProperty("border");
        here = event.target;
        while (!here.classList.contains("sub")
            && !here.classList.contains("grop")
            && here.id != "exambody") {
            here = here.parentElement;
            if (here == null) {
                here = lasthere;
                break;
            }
        }
        here.style.border = "solid 2px white";
    };
    function guid(){
        return $.ajax({
            url: '/Exam/Guid',
            type: 'POST',
            datatype: 'string',
            data: {
                __RequestVerificationToken: token
            }
        });
    };
    async function sub() {
        try {
            var g = await guid();
            return `
    <div id=`+ g + ` class= "sub" onclick = "setmehere(event)" >
        <div class= "row" onclick = "setmehere(event)" >
            <h3 class="Degree">deg:0</h3>
            <img class='minimg' src = '/Resources/minimize.svg' onclick ='setmehere(event);minimize(event);' />
            <img class='minimg' src = '/Resources/delete.svg' onclick ='setmehere(event);removesub2here(event);' />
        </div>
        <div class= "row" onclick = "setmehere(event)" >
            <button class= "smallbutton" onclick = "AddSub2f(event);setmehere(event)" >
                <img src = "/Resources/Exam/AddSub2E.svg" onclick = "setmehere(event)" />
            </button>
            <button class= "smallbutton" onclick = "AddGrop2f(event);setmehere(event);" >
                <img src = "/Resources/Exam/AddGrop2E.svg" onclick = "setmehere(event)" />
            </button>
        </div>
        <div class= "row" onclick = "setmehere(event)" >
            <span onclick = "setmehere(event)" style = "margin: 0 10px;width: 100%;" > Heading </span >
        </div>
        <div class= "row" onclick = "setmehere(event)" >
            <textarea onchange=" saveAddSub2f(event)" onclick = "setmehere(event)" style = "max-width: none;" ></textarea>
        </div>
    </div>`;
        }
        catch {
            console.log(err);
            return '';
        }
    };
    async function AddSub2E() {
        exambody.innerHTML = exambody.innerHTML + await sub();
    };
    async function AddSub2f() {
        here.innerHTML = here.innerHTML + await sub();
    };
    function saveAddSub2f(event) {
        if (event.target.value != '') {
            if (here.parentElement.id == 'exambody') {
                $.ajax({
                    url: '/Exam/AddSub2Exam?e=' + '@Model.Id' + '&id=' + here.id + '&head=' + event.target.value,
                    type: 'POST',
                    data: { __RequestVerificationToken: token, e: '@Model.Id', id: here.id, head: event.target.value }
                });
            } else {
                $.ajax({
                    url: '/Exam/AddSub2Sub?sub=' + here.parentElement.id + '&id=' + event.target.parentElement.parentElement.id
                        + '&head=' + event.target.value,
                    type: 'POST',
                    data: { __RequestVerificationToken: token, sub: here.parentElement.id, id: event.target.parentElement.parentElement.id, head: event.target.value }
                });
            }
        }
    };
    function addqtohere(event) {
        event.target.setAttribute("onclick", "removeqtohere(event);");
        var q = event.target.parentElement.parentElement;
        event.target.src = "/Resources/delete.svg";
        questionbody.removeChild(q);
        var span = document.createElement("span");
        span.innerHTML = "Degree";
        span.addEventListener("click", setmehere(event));
        span.style = "style='margin: 0 10px; width: 60px;'"
        var input = document.createElement("input");
        input.type = 'number';
        input.addEventListener("click", setmehere(event));
        input.addEventListener("change", (event) => {
            setmehere(event);
            saveAddq2f(event);
        });
        input.style = 'width: 82% !important;max-width: none;';
        var div = document.createElement('div');
        div.appendChild(span);
        div.appendChild(input);
        q.style.border = "black solid 2px";
        q.style.minwidth = "0";
        q.appendChild(div);
        here.appendChild(q);
    };
    function saveAddq2f(event) {
        if (event.target.value != undefined) {
            var q = event.target.parentElement.parentElement;
            if (here.classList.contains("sub")) {
                $.ajax({
                    url: '/Exam/AddQuestion2Sub?e=' + '@Model.Id' + '&sub=' + here.id + '&q=' + q.id + '&deg=' + event.target.value,
                    type: 'POST',
                    data: { __RequestVerificationToken: token, e: '@Model.Id', sub: here.id, q: q.id, deg: event.target.value },
                    success: function (data) {
                        q.id = data;
                    },
                });
                var deg = here.children[0].children[0];
                var c = 0;
                var is = here.getElementsByTagName('input');
                for (var i = 0; i < is.length; i += 1)
                    c += (Number)(is[i].value);
                deg.innerText ='deg:'+c;
            }
            if (here.classList.contains("grup")) {
                $.ajax({
                    url: '/Exam/AddQuestion2?e=' + '@Model.Id' + '&q=' + q.id + '&deg=' + event.target.value,
                    type: 'POST',
                    data: { __RequestVerificationToken: token, e: '@Model.Id', q: q.id, deg: event.target.value },
                    success: function (data) {
                        q.id = data;
                    },
                });
            }
            if (here.id == "exambody") {
                $.ajax({
                    url: '/Exam/AddQuestion2Exam?e=' + '@Model.Id' + '&q=' + q.id + '&deg=' + event.target.value,
                    type: 'POST',
                    data: { __RequestVerificationToken: token, e: '@Model.Id', q: q.id, deg: event.target.value },
                    success: function (data) {
                        q.id = data;
                    },
                });
            }
        }
    }
    function removeqtohere(event) {
        event.target.setAttribute("onclick", "addqtohere(event);");
        var q = event.target.parentElement.parentElement;
        var deg = here.children[0].children[0];
        q.style.removeProperty('border');
        q.style.removeProperty('min-width');
        var div = q.children[q.childElementCount - 1];
        var n = div.children[div.childElementCount - 1];
        here.removeChild(q);
        q.removeChild(q.children[q.childElementCount - 1]);
        event.target.src = "/Resources/Account/add.svg";
        questionbody.appendChild(q);
        if (here.classList.contains("sub")) {
            $.ajax({
                url: '/Exam/RemoveQuestion2Sub?sub=' + here.id + '&q=' + event.target.parentElement.id,
                type: 'POST',
                data: {
                    __RequestVerificationToken: token,
                    sub: here.id,
                    q: q.id
                },
                success: function (data) {
                    q.id = data;
                },
            });
            deg.innerText = deg.innerText.substr(0, 4) + (((Number)(deg.innerText.substr(4, deg.innerText.length))) - (Number)(n.value))
        }
        if (here.classList.contains("grup")) {

        }
        if (here.id == "exambody") {
            $.ajax({
                url: '/Exam/removeQuestion2Exam?q=' + q.id + '&e=' + '@Model.Id',
                type: 'POST',
                data: {
                    __RequestVerificationToken: token,
                    q: q.id,
                    e: '@Model.Id'
                },
                success: function (data) {
                    q.id = data;
                },
            });
        }

    };
    function minimize(event) {
        event.target.src = "/Resources/maximize.svg";
        event.target.setAttribute("onclick", "maximum(event);")
        var x = false;
        for (var child of event.target.parentElement.parentElement.children) {
            if (x)
                child.style.display = "none";
            x = true;
        }

    };
    function maximum(event) {
        event.target.src = "/Resources/minimize.svg";
        event.target.setAttribute("onclick", "minimize(event);")
        var x = false;
        for (var child of event.target.parentElement.parentElement.children) {
            if (x)
                child.style.removeProperty('display');
            x = true;
        }
    };
    function removesub2here(event) {
        var sub = here;
        var id = sub.id;
        var parent = sub.parentElement;
        if (parent.classList.contains("sub")) {
            $.ajax({
                url: '/Exam/RemoveSub2Sub?sub=' + parent.id + '&id=' + id,
                type: 'POST',
                data: { __RequestVerificationToken: token, sub: parent.id , id:  id },
            });
        }
        if (parent.id == "exambody") {
            $.ajax({
                url: '/Exam/RemoveSub2Exam?e=' + '@Model.Id' + '&id=' + id,
                type: 'POST',
                data: { __RequestVerificationToken: token, e: '@Model.Id', id: id },
            });
        }
        var quetions = sub.getElementsByClassName('pnl');
        for (var i = 0; i < quetions.length; i++) {
            var q = quetions[i];
            q.children[0].children[1].setAttribute("onclick", "addqtohere(event);");
            q.children[0].children[1].src = "/Resources/Account/add.svg";
            here.removeChild(q);
            q.style.removeProperty('border');
            q.style.removeProperty('min-width');
            q.removeChild(q.children[q.childElementCount - 1]);
            questionbody.appendChild(q);
            $.ajax({
                url: '/Exam/Getqid4meq',
                type: 'POST',
                data: { __RequestVerificationToken: token, eq: q.id}
            });
        }
        parent.removeChild(sub);
        here = parent;
    };
    var grop = `<div class='sub' onclick ='setmehere(event)' >
                    <div class= "row" onclick = "setmehere(event)" >
                        <img class='minimg' src = '/Resources/minimize.svg' onclick ='setmehere(event);minimize(event);' />
                        <img class='minimg' src = '/Resources/delete.svg' onclick ='setmehere(event);removeGrop2here(event);' />
                    </div>
                    <div>
                        <span>Degree</span>
                        <input onchange="setmehere(event);saveAddgrop2f(event)" type="number" onclick="lastd=event.target.value;setmehere(event)" style="max-width: none;color:#00c0ff !important; width: 82% !important;" />
                    </div>
                </div>`;
    function AddGrop2E() {
        exambody.innerHTML = exambody.innerHTML + grop;
    };
    function AddGrop2f() {
        here.innerHTML = here.innerHTML + grop;
    };
    function saveAddgrop2f(event) {
        if (event.target.value != '') {
            if (here.parentElement.id == 'exambody') {
                $.ajax({
                    url: '/Exam/AddGrop2Exam?e=' + '@Model.Id' + '&id=' + here.id + '&deg=' + event.target.value,
                    type: 'POST',
                    data: { __RequestVerificationToken: token, e: '@Model.Id', id:here.id, deg: event.target.value },
                    success: function (data) {
                        event.target.parentElement.parentElement.id = data;
                    },
                });
            } else {
                $.ajax({
                    url: '/Exam/AddGrop2Sub?sub=' + here.parentElement.id + '&id=' + here.id + '&deg=' + event.target.value,
                    type: 'POST',
                    data: { __RequestVerificationToken: token, sub: here.parentElement.id, deg: event.target.value },
                    success: function (data) {
                        event.target.parentElement.parentElement.id = data;
                    },
                });
                var deg = here.parentElement.children[0].children[0];
                var c = 0;
                var is = here.parentElement.getElementsByTagName('input');
                for (var i = 0; i < is.length; i += 1)
                    c += (Number)(is[i].value);
                deg.innerText = 'deg:' + c;
            }
        }
    };
    function removeGrop2here(event) {
        var Grop = here;
        var id = Grop.id;
        var parent = Grop.parentElement;
        if (parent.classList.contains("sub")) {
            $.ajax({
                url: '/Exam/RemoveGrop2Sub?sub=' + parent.id + '&grop=' + id,
                type: 'POST',
                data: { __RequestVerificationToken: token, sub: parent.id, grop:  id },
            });
        }
        if (parent.id == "exambody") {
            $.ajax({
                url: '/Exam/RemoveGrop2Exam?e=' + '@Model.Id' + '&id=' + id,
                type: 'POST',
                data: { __RequestVerificationToken: token, e: '@Model.Id', id: id },
            });
        }
        parent.removeChild(Grop);
        here = parent;
    };

    examtop.addEventListener("mousedown", (event) => {
        localStorage.setItem("lasttop", "examtop")
        examtop.style.marginTop = "0px";
        examtop.style.marginLeft = "0px";
        exambody.style.zIndex = "2";
        examtop.style.zIndex = "2";
        questiontop.style.removeProperty("background-color");
        questionbody.style.removeProperty("background-color");
        questiontop.style.zIndex = "1";
        questionbody.style.zIndex = "1";
        var st = document.documentElement.scrollTop;
        examtop.style.removeProperty("right");
        if (event.clientX > bodyp.left && event.clientX < bodyp.right)
            examtop.style.left = exambody.style.left = event.clientX - bodyp.left - (examtop.clientWidth / 2) + 'px';
        if (event.clientY + st > bodyp.y / 4 - 220 && event.clientY + st < bodyp.y / 4 - 220 + bodyp.height) {
            examtop.style.top = event.clientY + st - bodyp.top / 4 + 220 - (examtop.clientHeight / 2) + 'px';
            exambody.style.top = event.clientY + st - bodyp.top / 4 + 220 + (examtop.clientHeight / 2) - 12 + 'px';
        }
        document.addEventListener("mousemove", FolwMouse);
        function FolwMouse(event) {
            var st = document.documentElement.scrollTop;
            examtop.style.removeProperty("right");
            if (event.clientX > bodyp.left && event.clientX < bodyp.right)
                examtop.style.left = exambody.style.left = event.clientX - bodyp.left - (examtop.clientWidth / 2) + 'px';
            if (event.clientY + st > bodyp.y / 4 - 220 && event.clientY + st < bodyp.y / 4 - 220 + bodyp.height) {
                examtop.style.top = event.clientY + st - bodyp.top / 4 + 220 - (examtop.clientHeight / 2) + 'px';
                exambody.style.top = event.clientY + st - bodyp.top / 4 + 220 + (examtop.clientHeight / 2) - 12 + 'px';
            }
        }
        examtop.addEventListener("mouseup", (event) => {
            examtop.style.removeProperty("margin-top");
            examtop.style.removeProperty("margin-left");
            document.removeEventListener("mousemove", FolwMouse);
            exambody.style.removeProperty("top");
            examtop.style.removeProperty("top");
            if (event.clientY - bodyp.top / 4 + 220 + document.documentElement.scrollTop < body.clientHeight / 20) {
                exambody.style.width = "100%";
                questionbody.style.width = "100%";
                exambody.style.removeProperty("left");
                exambody.style.removeProperty("right");
                questionbody.style.removeProperty("left");
                questionbody.style.removeProperty("right");
                if (event.clientX - bodyp.left < questiontop.clientWidth + (body.clientHeight / 66.6666666666666)) {
                    examtop.style.removeProperty("left");
                    examtop.style.removeProperty("right");
                    questiontop.style.removeProperty("right");
                    questiontop.style.removeProperty("left");
                    localStorage.setItem("screan", "1")
                } else {
                    questiontop.style.left = "-3.75vw";
                    questiontop.style.removeProperty("right");
                    examtop.style.removeProperty("right");
                    examtop.style.left = "5.5vw";
                    localStorage.setItem("screan", "2")
                }
            } else {
                exambody.style.width = "50%";
                questionbody.style.width = "50%";
                if (event.clientX < window.innerWidth / 2) {
                    examtop.style.removeProperty("left");
                    examtop.style.removeProperty("right");
                    questiontop.style.removeProperty("left");
                    questiontop.style.right = "0.75vw";
                    exambody.style.removeProperty("left");
                    exambody.style.removeProperty("right");
                    questionbody.style.removeProperty("left");
                    questionbody.style.right = "0px";
                    localStorage.setItem("screan", "3")
                } else {
                    questiontop.style.left = "-3.75vw";
                    questiontop.style.removeProperty("right");
                    examtop.style.removeProperty("left");
                    examtop.style.right = "0.75vw";
                    questionbody.style.removeProperty("left");
                    questionbody.style.removeProperty("right");
                    exambody.style.removeProperty("left");
                    exambody.style.right = "0px"
                    localStorage.setItem("screan", "4")
                }
            }
        });
    });
    questiontop.addEventListener("mousedown", (event) => {
        localStorage.setItem("lasttop", "questiontop")
        questiontop.style.marginTop = "0px";
        questiontop.style.marginLeft = "0px";
        exambody.style.zIndex = "1";
        examtop.style.zIndex = "1";
        questiontop.style.zIndex = "2";
        questionbody.style.zIndex = "2";
        exambody.style.removeProperty("background-color");
        examtop.style.removeProperty("background-color");
        questiontop.style.removeProperty("right");
        if (event.clientX > bodyp.left && event.clientX < bodyp.right)
            questiontop.style.left = questionbody.style.left = event.clientX - bodyp.left - (questiontop.clientWidth / 2) + 'px';
        if (event.clientY + document.documentElement.scrollTop > bodyp.top / 4 - 220 && event.clientY + document.documentElement.scrollTop < bodyp.top / 4 - 220 + bodyp.height) {
            questiontop.style.top = event.clientY - (questiontop.clientHeight / 2) - bodyp.top / 4 + 220 + document.documentElement.scrollTop + 'px';
            questionbody.style.top = event.clientY - bodyp.top / 4 + 220 + document.documentElement.scrollTop + (questiontop.clientHeight / 2) - 12 + 'px';
        }
        document.addEventListener("mousemove", FolwMouse);
        function FolwMouse(event) {
            questiontop.style.removeProperty("right");
            if (event.clientX > bodyp.left && event.clientX < bodyp.right)
                questiontop.style.left = questionbody.style.left = event.clientX - bodyp.left - (questiontop.clientWidth / 2) + 'px';
            if (event.clientY + document.documentElement.scrollTop > bodyp.top / 4 - 220 && event.clientY + document.documentElement.scrollTop < bodyp.top / 4 - 220 + bodyp.height) {
                questiontop.style.top = event.clientY - (questiontop.clientHeight / 2) - bodyp.top / 4 + 220 + document.documentElement.scrollTop + 'px';
                questionbody.style.top = event.clientY - bodyp.top / 4 + 220 + document.documentElement.scrollTop + (questiontop.clientHeight / 2) - 12 + 'px';
            }
        }
        questiontop.addEventListener("mouseup", (event) => {
            questiontop.style.removeProperty("margin-top");
            questiontop.style.removeProperty("margin-left");
            document.removeEventListener("mousemove", FolwMouse);
            questionbody.style.removeProperty("top");
            questiontop.style.removeProperty("top");
            if (event.clientY - bodyp.top / 4 + 220 + document.documentElement.scrollTop < body.clientHeight / 20) {
                exambody.style.width = "100%";
                questionbody.style.width = "100%";
                exambody.style.removeProperty("left");
                exambody.style.removeProperty("right");
                questionbody.style.removeProperty("left");
                questionbody.style.removeProperty("right");
                if (event.clientX - bodyp.left > examtop.clientWidth + (body.clientWidth / 66.6666666666666)) {
                    questiontop.style.removeProperty("left");
                    questiontop.style.removeProperty("right");
                    examtop.style.removeProperty("right");
                    examtop.style.removeProperty("left");
                    localStorage.setItem("screan", "1")
                } else {
                    questiontop.style.left = "-3.75vw";
                    questiontop.style.removeProperty("right");
                    examtop.style.removeProperty("right");
                    examtop.style.left = "5.5vw";
                    localStorage.setItem("screan", "2")
                }
            } else {
                exambody.style.width = "50%";
                questionbody.style.width = "50%";
                if (event.clientX > body.clientWidth / 2) {
                    examtop.style.removeProperty("left");
                    examtop.style.removeProperty("right");
                    questiontop.style.removeProperty("left");
                    questiontop.style.right = "0.75vw";
                    exambody.style.removeProperty("left");
                    exambody.style.removeProperty("right");
                    questionbody.style.removeProperty("left");
                    questionbody.style.right = "0px";
                    localStorage.setItem("screan", "3")
                } else {
                    questiontop.style.left = "-3.75vw";
                    questiontop.style.removeProperty("right");
                    examtop.style.removeProperty("left");
                    examtop.style.right = "0.75vw";
                    questionbody.style.removeProperty("left");
                    questionbody.style.removeProperty("right");
                    exambody.style.removeProperty("left");
                    exambody.style.right = "0px";
                    localStorage.setItem("screan", "4")
                }
            }
        });
    });
    window.onload = () => {
        var lasttop = localStorage.getItem("lasttop")
        if (lasttop == "examtop") {
            exambody.style.zIndex = "2";
            examtop.style.zIndex = "2";
            questiontop.style.zIndex = "1";
            questionbody.style.zIndex = "1";
        }
        if (lasttop == "questiontop") {
            exambody.style.zIndex = "1";
            examtop.style.zIndex = "1";
            questiontop.style.zIndex = "2";
            questionbody.style.zIndex = "2";
        }
        examtop.style.removeProperty("margin-top");
        examtop.style.removeProperty("margin-left");
        exambody.style.removeProperty("top");
        examtop.style.removeProperty("top");
        var screan = localStorage.getItem("screan")
        if (screan == 1) {
            exambody.style.width = "100%";
            questionbody.style.width = "100%";
            exambody.style.removeProperty("left");
            exambody.style.removeProperty("right");
            questionbody.style.removeProperty("left");
            questionbody.style.removeProperty("right");
            examtop.style.removeProperty("left");
            examtop.style.removeProperty("right");
            questiontop.style.removeProperty("right");
            questiontop.style.removeProperty("left");
            localStorage.setItem("screan", "1")
        }
        if (screan == 2) {
            exambody.style.width = "100%";
            questionbody.style.width = "100%";
            exambody.style.removeProperty("left");
            exambody.style.removeProperty("right");
            questionbody.style.removeProperty("left");
            questionbody.style.removeProperty("right");
            questiontop.style.left = "-3.75vw";
            questiontop.style.removeProperty("right");
            examtop.style.removeProperty("right");
            examtop.style.left = "5.5vw";
            localStorage.setItem("screan", "2")
        }
        if (screan == 3) {
            exambody.style.width = "50%";
            questionbody.style.width = "50%";
            examtop.style.removeProperty("left");
            examtop.style.removeProperty("right");
            questiontop.style.removeProperty("left");
            questiontop.style.right = "0.75vw";
            exambody.style.removeProperty("left");
            exambody.style.removeProperty("right");
            questionbody.style.removeProperty("left");
            questionbody.style.right = "0px";
            localStorage.setItem("screan", "3")
        }
        if (screan == 4) {
            exambody.style.width = "50%";
            questionbody.style.width = "50%";
            questiontop.style.left = "-3.75vw";
            questiontop.style.removeProperty("right");
            examtop.style.removeProperty("left");
            examtop.style.right = "0.75vw";
            questionbody.style.removeProperty("left");
            questionbody.style.removeProperty("right");
            exambody.style.removeProperty("left");
            exambody.style.right = "0px"
            localStorage.setItem("screan", "4")
        }
    }
</script>
}