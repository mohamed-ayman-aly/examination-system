@using examination_system.Models;
@model Exam
@{
    ViewBag.Title = "Add Exam";
}
@functions{
    public string qtohtml(ExamQuestion eq)
    {
        string res = "";
        res += "<div id=\"" + eq.Id + "\" class=\"pnl\" style=\"display: flex; justify-content: space-between; align-items: center;\" onclick=\"setmehere(event)\" >" +
                   "<div onclick=\"setmehere(event)\">" +
                       "<div onclick=\"setmehere(event)\">" + eq.Question.QuestionBody + "</div>" +
                       "<input onclick=\"setmehere(event)\" value=\"" + eq.Degree + "\" />" +
                       "<ul onclick=\"setmehere(event)\">";
        foreach (var a in eq.Question.Answers)
        {
            res += "<li onclick=\"setmehere(event)\"><div onclick=\"setmehere(event)\"> @a.AnswerBody </div></li>";
        }
        res += "</ul>" +
            "</div>" +
            "<img src = \"/Resources/Account/minus.svg\" width=\"50\" height=\"50\" onclick=\"setmehere(event);removeqtoe('" + eq.Id + "')\" />" +
        "</div>";
        return res;
    }
    public string groptohtml(GroupQuestion gq)
    { return ""; }
    public string suptohtml(SubQuestion sq)
    {
        string res = "";
        res += "<div id='" + sq.Id + "' class='sub' onclick ='setmehere(event)' >" +
                  "<div class= 'row' onclick ='setmehere(event)'>" +
                      "<button class= 'smallbutton' onclick = 'setmehere(event);AddSub2f(event)' >" +
                          "<img src = '/Resources/Exam/AddSub2E.svg' onclick = 'setmehere(event)' />" +
                      "</button>" +
                      "<button class='smallbutton' onclick = 'setmehere(event);AddGrop2f(event);' >" +
                          "<img src = '/Resources/Exam/AddGrop2E.svg' onclick ='setmehere(event)' />" +
                      "</button>" +
                  "</div>" +
                  "<div class= 'row' onclick = 'setmehere(event)' >" +
                      "<span onclick = 'setmehere(event)' style = 'margin: 0 10px;width: 60px;' > Heading</ span>" +
                  "</div>" +
                  "<div class= 'row' onclick = 'setmehere(event)' >" +
                      "<textarea onfocusout='saveAddSub2f(event)' onclick = 'setmehere(event)' style = 'width: 82% !important;max-width: none;'>" +
                      sq.Heading+
                      "</textarea>"+
                  "</div>";

        foreach (ExamQuestion eq in sq.Questions) {
            res += qtohtml(eq);
        }
        foreach (GroupQuestion gq in sq.GroupQuestions) {
            res += groptohtml(gq);
        }
        foreach (SubQuestion ssq in sq.SubQuestions)
        {
            res += suptohtml(ssq);
        }
        res += "</div>" +
        "<br/>";
        return res;
    }
        }
<h2>Edit Exam:@Model.Name</h2>
<button class="smallbutton" onclick="AddSub2E()">
<img src = "/Resources/Exam/AddSub2E.svg" />
</button >
<button class="smallbutton" onclick="AddGrop2E()">
<img src = "/Resources/Exam/AddGrop2E.svg" />
</button >
<div  id="body" class="body">
<div id = "examtop" class="move" unselectable="on" style="position: absolute;overflow-y:hidden;">exam</div>
<div id = "questiontop" class="move" unselectable="on" style="position: absolute; overflow-y: hidden;">questions</div>
<div id="exambody" onclick="setmehere(event);" style="position: absolute;border: solid 2px #4747ff">
    @foreach (ExamQuestion eq in ViewBag.exambody)
    {
        @Html.Raw(@qtohtml(eq));
    }
    @foreach (GroupQuestion q in ViewBag.myexamGroupQuestions)
    {
        @Html.Raw(@groptohtml(q));
    }
    @foreach (SubQuestion q in ViewBag.myexamSubQuestions)
    {
        @Html.Raw(@suptohtml(q));
    }
    </div>
<div id = "questionbody" style="position: absolute;">
    @foreach(Question q in ViewBag.questionbody)
        {
        <div id="@q.Id" class="pnl" style="display: flex; justify-content: space-between; align-items: center;">
            <div>
                <div>
                    @q.QuestionBody
                </div>
                <ul>
                    @foreach (var a in q.Answers)
                    {
                        <li><div> @a.AnswerBody </div ></li>
                    }
                </ul>
            </div>
            <img src = "/Resources/Account/add.svg" width="50" height="50" onclick="addqtohear(event)" />
        </div>
    }
</div >
</div >
<style >
* {
        margin: 0;
        padding: 0;
    }

.sub
    {
        display: flex;
        background-color: white;
        color: #3140c7;
    border-radius: 12px;
        margin: 10px;
        flex-direction: column;
        border: solid black 2px;
    }

    .sub.sub {
        margin: 30px;
        display: flex;
        flex-wrap: wrap;
    }

#body {
    position: relative;
    width: 100%;
    height: 80vh;
    background-color: white;
    overflow: hidden;
}

#examtop {
    color: aliceblue;
    background-color: #b2acf3;
    padding: 5px;
    padding-bottom: 40px;
    margin-top: 0.75vh;
    margin-left: 0.75vw;
    height: 4.25vh;
    border-radius: 3vh 3vh 0 0;
    display: inline-block;
    text-align: center;
    line-height: 4.25vh;
    z-index: 1;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    -o-user-select: none;
    user-select: none;
}

#questiontop {
    color: aliceblue;
    background-color: #b2acf3;
    margin-top: 0.75vh;
    margin-left: 5.5vw;
    height: 4.25vh;
    padding: 5px;
    padding-bottom: 40px;
    border-radius: 3vh 3vh 0 0;
    display: inline-block;
    text-align: center;
    line-height: 4.25vh;
    z-index: 1;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    -o-user-select: none;
    user-select: none;
}

    #exambody {
        background-color: #b2acf3;
        position: absolute;
    width: 100%;
    height: 75vh;
    overflow-y: auto;
    top: 5vh;
    z-index: 1;
    border-radius: 3vh;
    }

    #questionbody {
        background-color: #b2acf3;
        position: absolute;
    width: 100%;
    height: 75vh;
    overflow-y: auto;
    top: 5vh;
    z-index: 1;
    border-radius: 3vh;
    }

    .row {
        margin: 10px;
        display:flex;
        align-items: center;
        flex-wrap: wrap;
        flex-direction: row;
        width:93%;
    }
</style >
@section Scripts
    {
        @Scripts.Render("~/bundles/jqueryval")
<script>
    var examtop = document.getElementById("examtop");
    var questiontop = document.getElementById("questiontop");

    var exambody = document.getElementById("exambody");
    var questionbody = document.getElementById("questionbody");

    var body = document.getElementById("body");
    var bodyp = body.getBoundingClientRect();
    var here = exambody;
    here.style.border = "#4747ff solid 2px";
    function setmehere(event) {
        var lasthere = here;
        here.style.removeProperty("border");
        here = event.target;
        while (!here.classList.contains("sub")
            && !here.classList.contains("grop")
            && here.id != "exambody") {
            here = here.parentElement;
            if (here == null) {
                here = lasthere;
                break;
            }
        }
        here.style.border = "solid 2px #4747ff";
    };
    function guid(){
        return $.ajax({
            url: '/Exam/Guid',
            type: 'GET',
            datatype: 'string',
        });
    };
    async function sub() {
        try {
            var g = await guid();
            return `
    <div id=`+ g + ` class= "sub" onclick = "setmehere(event)" >
        <div class= "row" onclick = "setmehere(event)" >
            <button class= "smallbutton" onclick = "AddSub2f(event);setmehere(event)" >
                <img src = "/Resources/Exam/AddSub2E.svg" onclick = "setmehere(event)" />
            </button>
            <button class= "smallbutton" onclick = "AddGrop2f(event);setmehere(event);" >
                <img src = "/Resources/Exam/AddGrop2E.svg" onclick = "setmehere(event)" />
            </button>
        </div>
        <div class= "row" onclick = "setmehere(event)" >
            <span onclick = "setmehere(event)" style = "margin: 0 10px;width: 100%;" > Heading </span >
        </div>
        <div class= "row" onclick = "setmehere(event)" >
            <textarea onfocusout=" saveAddSub2f(event)" onclick = "setmehere(event)" style = "max-width: none;" ></textarea>
        </div>
    </div>
    <br/>
`;
        }
        catch {
            console.log(err);
            return '';
        }
    };
    async function AddSub2E() {
        exambody.innerHTML = exambody.innerHTML + await sub();
    };
    async function AddSub2f(event) {
        event.target.parentElement.parentElement.parentElement.innerHTML = event.target.parentElement.parentElement.parentElement.innerHTML + await sub();
    };
    function saveAddSub2E(event) {
        if (event.target.value!='')
        $.ajax({
            url: '/Exam/AddSub2Exam?e=' + '@Model.Id' + '&id=' + here.id + '&head=' + event.target.value,
            type: 'GET',
            data: { e: '@Model.Id', id: here.id, head: event.target.value }
        });
    };
    function saveAddSub2f(event) {
        if (event.target.value != '') {
            if (here.parentElement.id == 'exambody') {
                $.ajax({
                    url: '/Exam/AddSub2Exam?e=' + '@Model.Id' + '&id=' + here.id + '&head=' + event.target.value,
                    type: 'GET',
                    data: { e: '@Model.Id', id: here.id, head: event.target.value }
                });
            } else {
                $.ajax({
                    url: '/Exam/AddSub2Sub?sub=' + here.parentElement.id + '&id=' + event.target.parentElement.parentElement.id
                        + '&head=' + event.target.value,
                    type: 'POST',
                    data: { sub: here.parentElement.id, id: event.target.parentElement.parentElement.id, head: event.target.value }
                });
            }
        }
    }
    function removeqtohear(event) {
        event.target.setAttribute("onclick", "addqtohear(event);");
        var q = event.target.parentElement;
        here.removeChild(q);
        q.style.removeProperty('border');
        q.style.removeProperty('min-width');
        q.removeChild(q.children[q.childElementCount - 1]);
        q.removeChild(q.children[q.childElementCount - 1]);
        event.target.src = "/Resources/Account/add.svg";
        questionbody.appendChild(q);
        $.ajax({
            url: '/Exam/removeQuestion2Exam?q=' + q.id + '&e=' + '@Model.Id',
            type: 'GET',
            data: { q: q.id, e: '@Model.Id' },
        });
    }
    function addqtohear(event) {
        event.target.setAttribute("onclick", "removeqtohear(event);");
        var q = event.target.parentElement;
        event.target.src = "/Resources/Account/minus.svg";
        questionbody.removeChild(q);
        var span = document.createElement("span");
        span.innerHTML = "Degree";
        span.addEventListener("click", setmehere(event));
        span.style = "style='margin: 0 10px; width: 60px;'"
        var input = document.createElement("input");
        input.type = 'number';
        input.addEventListener("click", setmehere(event));
        input.addEventListener("focusout", (event) => {
            if (event.target.value == "" || event.target.value == 0) {
                return;
            }
            if (here.classList.contains("sub")) {
                $.ajax({
                    url: '/Exam/AddQuestion2Sub?e=' + '@Model.Id' + '&sub=' + here.id + '&q=' + event.target.parentElement.id + '&deg=' + event.target.value,
                    type: 'GET',
                    data: { e: '@Model.Id', sub: here.id, q: event.target.parentElement.id, deg: event.target.value },
                });
            }
            if (here.classList.contains("grup")) {
                $.ajax({
                    url: '/Exam/AddQuestion2?e=' + '@Model.Id' + '&q=' + event.target.parentElement.id + '&deg=' + event.target.value,
                    type: 'GET',
                    data: { e: '@Model.Id', q: event.target.parentElement.id, deg: event.target.value },
                });
            }
            if (here.id == "exambody") {
                $.ajax({
                    url: '/Exam/AddQuestion2Exam?e=' + '@Model.Id' + '&q=' + event.target.parentElement.id + '&deg=' + event.target.value,
                    type: 'GET',
                    data: { e: '@Model.Id', q: event.target.parentElement.id, deg: event.target.value },
                });
            }
        });
        input.style = 'width: 82% !important;max-width: none;';
        q.style.border = "black solid 2px";
        q.style.minwidth = "0";
        q.appendChild(span);
        q.appendChild(input);
        here.appendChild(q);
    }






    examtop.addEventListener("mousedown", () => {
        localStorage.setItem("lasttop", "examtop")
        examtop.style.marginTop = "0px";
        examtop.style.marginLeft = "0px";
        exambody.style.zIndex = "2";
        examtop.style.zIndex = "2";
        examtop.style.backgroundColor = "#685de7";
        exambody.style.backgroundColor = "#685de7";
        questiontop.style.removeProperty("background-color");
        questionbody.style.removeProperty("background-color");
        questiontop.style.zIndex = "1";
        questionbody.style.zIndex = "1";
        document.addEventListener("mousemove", FolwMouse);
        function FolwMouse(event) {
            var st = document.documentElement.scrollTop;
            examtop.style.removeProperty("right");
            if (event.clientX > bodyp.left && event.clientX < bodyp.right)
                examtop.style.left = exambody.style.left = event.clientX - bodyp.left - (examtop.clientWidth / 2) + 'px';
            if (event.clientY + st > bodyp.y / 4 - 50 && event.clientY + st < bodyp.y / 4 - 50 + bodyp.height) {
                examtop.style.top = event.clientY + st - bodyp.top / 4 + 50 - (examtop.clientHeight / 2) + 'px';
                exambody.style.top = event.clientY + st - bodyp.top / 4 + 50 + (examtop.clientHeight / 2) - 12 + 'px';
            }
        }
        examtop.addEventListener("mouseup", (event) => {
            examtop.style.removeProperty("margin-top");
            examtop.style.removeProperty("margin-left");
            document.removeEventListener("mousemove", FolwMouse);
            exambody.style.removeProperty("top");
            examtop.style.removeProperty("top");
            if (event.clientY - bodyp.top / 4 + 50 + document.documentElement.scrollTop < body.clientHeight / 20) {
                exambody.style.width = "100%";
                questionbody.style.width = "100%";
                exambody.style.removeProperty("left");
                exambody.style.removeProperty("right");
                questionbody.style.removeProperty("left");
                questionbody.style.removeProperty("right");
                if (event.clientX - bodyp.left < questiontop.clientWidth + (body.clientHeight / 66.6666666666666)) {
                    examtop.style.removeProperty("left");
                    examtop.style.removeProperty("right");
                    questiontop.style.removeProperty("right");
                    questiontop.style.removeProperty("left");
                    localStorage.setItem("screan", "1")
                } else {
                    questiontop.style.left = "-3.75vw";
                    questiontop.style.removeProperty("right");
                    examtop.style.removeProperty("right");
                    examtop.style.left = "5.5vw";
                    localStorage.setItem("screan", "2")
                }
            } else {
                exambody.style.width = "50%";
                questionbody.style.width = "50%";
                if (event.clientX < window.innerWidth / 2) {
                    examtop.style.removeProperty("left");
                    examtop.style.removeProperty("right");
                    questiontop.style.removeProperty("left");
                    questiontop.style.right = "0.75vw";
                    exambody.style.removeProperty("left");
                    exambody.style.removeProperty("right");
                    questionbody.style.removeProperty("left");
                    questionbody.style.right = "0px";
                    localStorage.setItem("screan", "3")
                } else {
                    questiontop.style.left = "-3.75vw";
                    questiontop.style.removeProperty("right");
                    examtop.style.removeProperty("left");
                    examtop.style.right = "0.75vw";
                    questionbody.style.removeProperty("left");
                    questionbody.style.removeProperty("right");
                    exambody.style.removeProperty("left");
                    exambody.style.right = "0px"
                    localStorage.setItem("screan", "4")
                }
            }
        });
    });
    questiontop.addEventListener("mousedown", () => {
    localStorage.setItem("lasttop", "questiontop")
                questiontop.style.marginTop = "0px";
    questiontop.style.marginLeft = "0px";
    exambody.style.zIndex = "1";
    examtop.style.zIndex = "1";
    questiontop.style.zIndex = "2";
    questionbody.style.zIndex = "2";
    questiontop.style.backgroundColor = "#685de7";
    questionbody.style.backgroundColor = "#685de7";
    exambody.style.removeProperty("background-color");
    examtop.style.removeProperty("background-color");
    document.addEventListener("mousemove", FolwMouse);
    function FolwMouse(event) {
        questiontop.style.removeProperty("right");
        if (event.clientX > bodyp.left && event.clientX < bodyp.right)
                        questiontop.style.left = questionbody.style.left = event.clientX - bodyp.left - (questiontop.clientWidth / 2) + 'px';
                    if (event.clientY + document.documentElement.scrollTop > bodyp.top / 4 - 50 && event.clientY + document.documentElement.scrollTop < bodyp.top / 4 - 50 + bodyp.height) {
        questiontop.style.top = event.clientY - (questiontop.clientHeight / 2) - bodyp.top / 4 + 50 + document.documentElement.scrollTop + 'px';
        questionbody.style.top = event.clientY - bodyp.top / 4 + 50 + document.documentElement.scrollTop + (questiontop.clientHeight / 2) - 12 + 'px';
    }
    }
    questiontop.addEventListener("mouseup", (event) => {
        questiontop.style.removeProperty("margin-top");
        questiontop.style.removeProperty("margin-left");
        document.removeEventListener("mousemove", FolwMouse);
        questionbody.style.removeProperty("top");
        questiontop.style.removeProperty("top");
        if (event.clientY - bodyp.top / 4 + 50 + document.documentElement.scrollTop < body.clientHeight / 20) {
            exambody.style.width = "100%";
            questionbody.style.width = "100%";
            exambody.style.removeProperty("left");
            exambody.style.removeProperty("right");
            questionbody.style.removeProperty("left");
            questionbody.style.removeProperty("right");
            if (event.clientX - bodyp.left > examtop.clientWidth + (body.clientWidth / 66.6666666666666)) {
                questiontop.style.removeProperty("left");
                questiontop.style.removeProperty("right");
                examtop.style.removeProperty("right");
                examtop.style.removeProperty("left");
                localStorage.setItem("screan", "1")
                        } else {
                questiontop.style.left = "-3.75vw";
                questiontop.style.removeProperty("right");
                examtop.style.removeProperty("right");
                examtop.style.left = "5.5vw";
                localStorage.setItem("screan", "2")
                        }
        } else {
            exambody.style.width = "50%";
            questionbody.style.width = "50%";
            if (event.clientX > body.clientWidth / 2) {
                examtop.style.removeProperty("left");
                examtop.style.removeProperty("right");
                questiontop.style.removeProperty("left");
                questiontop.style.right = "0.75vw";
                exambody.style.removeProperty("left");
                exambody.style.removeProperty("right");
                questionbody.style.removeProperty("left");
                questionbody.style.right = "0px";
                localStorage.setItem("screan", "3")
                        } else {
                questiontop.style.left = "-3.75vw";
                questiontop.style.removeProperty("right");
                examtop.style.removeProperty("left");
                examtop.style.right = "0.75vw";
                questionbody.style.removeProperty("left");
                questionbody.style.removeProperty("right");
                exambody.style.removeProperty("left");
                exambody.style.right = "0px";
                localStorage.setItem("screan", "4")
                        }
        }
    });
            });
    window.onload = () => {
        var lasttop = localStorage.getItem("lasttop")
                if (lasttop == "examtop") {
            exambody.style.zIndex = "2";
            examtop.style.zIndex = "2";
            questiontop.style.zIndex = "1";
            questionbody.style.zIndex = "1";
        }
        if (lasttop == "questiontop") {
            exambody.style.zIndex = "1";
            examtop.style.zIndex = "1";
            questiontop.style.zIndex = "2";
            questionbody.style.zIndex = "2";
        }
        examtop.style.removeProperty("margin-top");
        examtop.style.removeProperty("margin-left");
        exambody.style.removeProperty("top");
        examtop.style.removeProperty("top");
        var screan = localStorage.getItem("screan")
                if (screan == 1) {
            exambody.style.width = "100%";
            questionbody.style.width = "100%";
            exambody.style.removeProperty("left");
            exambody.style.removeProperty("right");
            questionbody.style.removeProperty("left");
            questionbody.style.removeProperty("right");
            examtop.style.removeProperty("left");
            examtop.style.removeProperty("right");
            questiontop.style.removeProperty("right");
            questiontop.style.removeProperty("left");
            localStorage.setItem("screan", "1")
                }
        if (screan == 2) {
            exambody.style.width = "100%";
            questionbody.style.width = "100%";
            exambody.style.removeProperty("left");
            exambody.style.removeProperty("right");
            questionbody.style.removeProperty("left");
            questionbody.style.removeProperty("right");
            questiontop.style.left = "-3.75vw";
            questiontop.style.removeProperty("right");
            examtop.style.removeProperty("right");
            examtop.style.left = "5.5vw";
            localStorage.setItem("screan", "2")
                }
        if (screan == 3) {
            exambody.style.width = "50%";
            questionbody.style.width = "50%";
            examtop.style.removeProperty("left");
            examtop.style.removeProperty("right");
            questiontop.style.removeProperty("left");
            questiontop.style.right = "0.75vw";
            exambody.style.removeProperty("left");
            exambody.style.removeProperty("right");
            questionbody.style.removeProperty("left");
            questionbody.style.right = "0px";
            localStorage.setItem("screan", "3")
                }
        if (screan == 4) {
            exambody.style.width = "50%";
            questionbody.style.width = "50%";
            questiontop.style.left = "-3.75vw";
            questiontop.style.removeProperty("right");
            examtop.style.removeProperty("left");
            examtop.style.right = "0.75vw";
            questionbody.style.removeProperty("left");
            questionbody.style.removeProperty("right");
            exambody.style.removeProperty("left");
            exambody.style.right = "0px"
                    localStorage.setItem("screan", "4")
                }
    }
</script>
}
