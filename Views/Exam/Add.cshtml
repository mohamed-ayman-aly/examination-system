@model examination_system.Models.Exam

@{
    ViewBag.Title = "Add";
    SelectList classes = new SelectList(ViewBag.Class, "Id", "Name", 0);
}
<div style="margin:0 70px">
    <h2 class="text">Add Exam</h2>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="control-label lbel col-md-2">class</label>
        <div class="col-md-10">
            @Html.DropDownList("Classid", classes, new { @class = "form-control slect" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "lbel control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "input form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "lbel control-label col-md-2" })
        <div class="col-md-10">
            <input type="datetime-local" id="Date" name="Date" class="input form-control" />
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "lbel control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "input form-control" } })
            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="pnlbutton btn btn-default" />
        </div>
    </div>
</div>
}

<div class="Back">
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}